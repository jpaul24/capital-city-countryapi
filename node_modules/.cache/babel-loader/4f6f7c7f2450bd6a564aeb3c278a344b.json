{"remainingRequest":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/babel-loader/lib/index.js!/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/src/components/GameCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/src/components/GameCard.vue","mtime":1641990518808},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/babel.config.js","mtime":1641833629266},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/cache-loader/dist/cjs.js","mtime":1641833606347},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/babel-loader/lib/index.js","mtime":1641833607029},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/cache-loader/dist/cjs.js","mtime":1641833606347},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/vue-loader/lib/index.js","mtime":1641833607612}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9qb2VwYXVsL25ld19jb2RlL3BvcnRmb2xpby1PY3QyMS9jYXBpdGFsLWNpdHktY291bnRyeWFwaS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnR2FtZUNhcmQnLAogIHByb3BzOiB7CiAgICBtc2c6IFN0cmluZwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRlZDogZmFsc2UsCiAgICAgIGFsbENvdW50cmllczogW10sCiAgICAgIHJhbmRvbUNvdW50cnk6IG51bGwsCiAgICAgIGdhbWVCZWdhbjogZmFsc2UsCiAgICAgIHRleHQ6IG51bGwsCiAgICAgIGNoZWNrZWRBbnN3ZXI6IGZhbHNlLAogICAgICBhbnN3ZXI6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICByYW5kb21pc2VDb3VudHJ5OiBmdW5jdGlvbiByYW5kb21pc2VDb3VudHJ5KGFsbENvdW50cmllcykgewogICAgICB0aGlzLnJhbmRvbUNvdW50cnkgPSBhbGxDb3VudHJpZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYWxsQ291bnRyaWVzLmxlbmd0aCldOwogICAgfSwKICAgIGJlZ2luR2FtZTogZnVuY3Rpb24gYmVnaW5HYW1lKCkgewogICAgICB0aGlzLmdhbWVCZWdhbiA9IHRydWU7CiAgICB9LAogICAgcmVtb3ZlU21hbGxlck5hdGlvbnM6IGZ1bmN0aW9uIHJlbW92ZVNtYWxsZXJOYXRpb25zKGNvdW50cnlEYXRhKSB7CiAgICAgIHZhciBkYXRhID0gW107CiAgICAgIGNvdW50cnlEYXRhLmZvckVhY2goZnVuY3Rpb24gKGNvdW50cnkpIHsKICAgICAgICBpZiAoY291bnRyeS5wb3B1bGF0aW9uID4gMTAwMDAwMCkgewogICAgICAgICAgZGF0YS5wdXNoKGNvdW50cnkpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiBkYXRhOwogICAgfSwKICAgIGNoZWNrQW5zd2VyOiBmdW5jdGlvbiBjaGVja0Fuc3dlcihlKSB7CiAgICAgIHZhciBjYXBpdGFsQW5zd2VyID0gdGhpcy5yYW5kb21Db3VudHJ5LmNhcGl0YWwudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpOwogICAgICB2YXIgYW5zd2VyID0gdGhpcy50ZXh0LnRvTG93ZXJDYXNlKCkgPT0gY2FwaXRhbEFuc3dlciA/IHRydWUgOiBmYWxzZTsKCiAgICAgIGlmIChhbnN3ZXIpIHsKICAgICAgICB0aGlzLmFuc3dlciA9ICJDb3JyZWN0ISBUaGUgY2FwaXRhbCBvZiAiLmNvbmNhdCh0aGlzLnJhbmRvbUNvdW50cnkubmFtZS5jb21tb24sICIgaXMgIikuY29uY2F0KHRoaXMucmFuZG9tQ291bnRyeS5jYXBpdGFsKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmFuc3dlciA9ICJXUk9ORyI7CiAgICAgIH0KCiAgICAgIHRoaXMuY2hlY2tlZEFuc3dlciA9IHRydWU7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXMubG9hZGVkID0gZmFsc2U7CiAgICAgICAgICAgICAgX3RoaXMuZ2FtZUJlZ2FuID0gZmFsc2U7CiAgICAgICAgICAgICAgYXhpb3MuZ2V0KCdodHRwczovL3Jlc3Rjb3VudHJpZXMuY29tL3YzLjEvYWxsJykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgIF90aGlzLmFsbENvdW50cmllcyA9IF90aGlzLnJlbW92ZVNtYWxsZXJOYXRpb25zKHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgICAgIF90aGlzLnJhbmRvbWlzZUNvdW50cnkoX3RoaXMuYWxsQ291bnRyaWVzKTsKCiAgICAgICAgICAgICAgICBfdGhpcy5sb2FkZWQgPSB0cnVlOwogICAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEgfHwgZXJyb3IubWVzc2FnZSB8fCBlcnJvci50b1N0cmluZygpKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["GameCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,YAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,IAHA;AAIA,MAAA,SAAA,EAAA,KAJA;AAKA,MAAA,IAAA,EAAA,IALA;AAMA,MAAA,aAAA,EAAA,KANA;AAOA,MAAA,MAAA,EAAA;AAPA,KAAA;AASA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,YADA,EACA;AACA,WAAA,aAAA,GAAA,YAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,YAAA,CAAA,MAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KANA;AAOA,IAAA,oBAPA,gCAOA,WAPA,EAOA;AACA,UAAA,IAAA,GAAA,EAAA;AAEA,MAAA,WAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,OAAA,CAAA,UAAA,GAAA,OAAA,EAAA;AACA,UAAA,IAAA,CAAA,IAAA,CAAA,OAAA;AACA;AACA,OAJA;AAMA,aAAA,IAAA;AACA,KAjBA;AAkBA,IAAA,WAlBA,uBAkBA,CAlBA,EAkBA;AACA,UAAA,aAAA,GAAA,KAAA,aAAA,CAAA,OAAA,CAAA,QAAA,GAAA,WAAA,EAAA;AACA,UAAA,MAAA,GAAA,KAAA,IAAA,CAAA,WAAA,MAAA,aAAA,GAAA,IAAA,GAAA,KAAA;;AAEA,UAAA,MAAA,EAAA;AACA,aAAA,MAAA,qCAAA,KAAA,aAAA,CAAA,IAAA,CAAA,MAAA,iBAAA,KAAA,aAAA,CAAA,OAAA;AACA,OAFA,MAEA;AACA,aAAA,MAAA;AACA;;AACA,WAAA,aAAA,GAAA,IAAA;AACA;AA5BA,GAhBA;AA8CA,EAAA,OA9CA,qBA8CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,KAAA,CAAA,MAAA,GAAA,KAAA;AACA,cAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,cAAA,KAAA,CAAA,GAAA,CAAA,oCAAA,EACA,IADA,CAEA,UAAA,QAAA,EAAA;AACA,gBAAA,KAAA,CAAA,YAAA,GAAA,KAAA,CAAA,oBAAA,CAAA,QAAA,CAAA,IAAA,CAAA;;AACA,gBAAA,KAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,YAAA;;AACA,gBAAA,KAAA,CAAA,MAAA,GAAA,IAAA;AACA,eANA,EAOA,UAAA,KAAA;AAAA,uBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,KAAA,CAAA,OAAA,IAAA,KAAA,CAAA,QAAA,EAAA,CAAA;AAAA,eAPA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AA1DA,CAAA","sourcesContent":["<template>\n  <div class=\"card\">\n    <h1 class=\"text-center mb-5\">Capital City Game</h1>\n    <div v-if=\"!gameBegan\" class=\"text-center\">\n      <p>Welcome to the capital city game where you are given a country and it's flag and you must guess the capital city. See how many you can get out of 10!</p>\n      <b-button @click=\"beginGame()\">Begin Game</b-button>\n    </div>\n    <div v-if=\"loaded && gameBegan\" class=\"text-center\">\n      <img :src=\"randomCountry.flags.png\" alt=\"\">\n      <h3 class=\"m-4\">\n        {{ randomCountry.name.common }}\n      </h3>\n      <div class=\"d-flex\">\n        <b-form-input v-model=\"text\" placeholder=\"Enter the capital city\"></b-form-input>\n        <b-button @click=\"checkAnswer($event)\" class=\"ml-3\" variant=\"success\">Enter</b-button>\n      </div>\n      <div v-if=\"checkedAnswer\">\n        {{ answer }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'GameCard',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      loaded: false,\n      allCountries: [],\n      randomCountry: null,\n      gameBegan: false,\n      text: null,\n      checkedAnswer: false,\n      answer: null\n    }\n  },\n  methods: {\n    randomiseCountry(allCountries) {\n      this.randomCountry = allCountries[Math.floor(Math.random() * allCountries.length)] \n    },\n    beginGame() {\n      this.gameBegan = true\n    },\n    removeSmallerNations(countryData) {\n      let data = []\n\n      countryData.forEach(country => {\n        if(country.population > 1000000) {\n          data.push(country)\n        }\n      })\n\n      return data\n    },\n    checkAnswer(e) {\n      let capitalAnswer = this.randomCountry.capital.toString().toLowerCase()\n      let answer = this.text.toLowerCase() == capitalAnswer ? true : false\n      \n      if (answer) {\n        this.answer = `Correct! The capital of ${this.randomCountry.name.common} is ${this.randomCountry.capital}`\n      } else {\n        this.answer = `WRONG`\n      }\n      this.checkedAnswer = true\n    }\n  },\n  async mounted() {\n    this.loaded = false\n    this.gameBegan = false\n    axios.get('https://restcountries.com/v3.1/all')\n      .then(\n        response => {\n          this.allCountries = this.removeSmallerNations(response.data)\n          this.randomiseCountry(this.allCountries)\n          this.loaded = true\n        },\n        error => console.log((error.response && error.response.data) || error.message || error.toString())\n      )\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n  .card {\n    width: 40%;\n    padding: 20px;\n    background-color: rgb(245, 236, 236);\n    border-radius: 5px;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}