{"remainingRequest":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/src/components/GameCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/src/components/GameCard.vue","mtime":1642184436638},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/cache-loader/dist/cjs.js","mtime":1641833606347},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/babel-loader/lib/index.js","mtime":1641833607029},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/cache-loader/dist/cjs.js","mtime":1641833606347},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/vue-loader/lib/index.js","mtime":1641833607612}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0dhbWVDYXJkJywKICBwcm9wczogewogICAgbXNnOiBTdHJpbmcKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkZWQ6IGZhbHNlLAogICAgICBhbGxDb3VudHJpZXM6IFtdLAogICAgICByYW5kb21Db3VudHJ5OiBudWxsLAogICAgICBnYW1lQmVnYW46IGZhbHNlLAogICAgICB0ZXh0OiBudWxsLAogICAgICBjaGVja2VkQW5zd2VyOiBmYWxzZSwKICAgICAgYW5zd2VyOiBudWxsLAogICAgICBzY29yZTogMCwKICAgICAgbnVtYmVyT2ZBbnN3ZXJzOiAwLAogICAgICB0ZW5Db3VudHJpZXM6IFtdCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXN0YXJ0R2FtZSgpIHsKICAgICAgdGhpcy5nYW1lQmVnYW4gPSBmYWxzZQogICAgICB0aGlzLnNjb3JlID0gMAogICAgICB0aGlzLm51bWJlck9mQW5zd2VycyA9IDAsCiAgICAgIHRoaXMuY2hlY2tlZEFuc3dlciA9IGZhbHNlCiAgICB9LAogICAgcmFuZG9taXNlQ291bnRyeSh0ZW5Db3VudHJpZXMpIHsKICAgICAgdGhpcy50ZXh0ID0gIiIKICAgICAgdGhpcy5jaGVja2VkQW5zd2VyID0gZmFsc2UKICAgICAgdGhpcy5yYW5kb21Db3VudHJ5ID0gdGVuQ291bnRyaWVzW3RoaXMubnVtYmVyT2ZBbnN3ZXJzXQogICAgfSwKICAgIGJlZ2luR2FtZSgpIHsgICAKICAgICAgdGhpcy50ZW5Db3VudHJpZXMgPSB0aGlzLmFsbENvdW50cmllcy5zb3J0KCgpID0+IE1hdGgucmFuZG9tKCkgLSBNYXRoLnJhbmRvbSgpKS5zbGljZSgwLCAxMCkKICAgICAgY29uc29sZS5sb2codGhpcy50ZW5Db3VudHJpZXMpCiAgICAgIHRoaXMucmFuZG9taXNlQ291bnRyeSh0aGlzLnRlbkNvdW50cmllcykKICAgICAgdGhpcy5nYW1lQmVnYW4gPSB0cnVlCiAgICB9LAogICAgcmVtb3ZlU21hbGxlck5hdGlvbnMoY291bnRyeURhdGEpIHsKICAgICAgbGV0IGRhdGEgPSBbXQoKICAgICAgY291bnRyeURhdGEuZm9yRWFjaChjb3VudHJ5ID0+IHsKICAgICAgICBpZihjb3VudHJ5LnBvcHVsYXRpb24gPiAxMDAwMDAwKSB7CiAgICAgICAgICBkYXRhLnB1c2goY291bnRyeSkKICAgICAgICB9CiAgICAgIH0pCgogICAgICByZXR1cm4gZGF0YQogICAgfSwKICAgIGNoZWNrQW5zd2VyKGlzUGFzcykgewogICAgICB0aGlzLm51bWJlck9mQW5zd2VycyArPSAxCiAgICAgIGxldCB1c2VyQW5zd2VyID0gdGhpcy50ZXh0LnRvTG93ZXJDYXNlKCkudHJpbSgpLm5vcm1hbGl6ZSgiTkZEIikucmVwbGFjZSgvW1x1MDMwMC1cdTAzNmZdL2csICIiKQogICAgICBsZXQgY2FwaXRhbEFuc3dlciA9IHRoaXMucmFuZG9tQ291bnRyeS5jYXBpdGFsLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKS5ub3JtYWxpemUoIk5GRCIpLnJlcGxhY2UoL1tcdTAzMDAtXHUwMzZmXS9nLCAiIikKICAgICAgbGV0IGFuc3dlciA9IHVzZXJBbnN3ZXIgPT0gY2FwaXRhbEFuc3dlciA/IHRydWUgOiBmYWxzZQogICAgICAKICAgICAgaWYgKGFuc3dlcikgewogICAgICAgIHRoaXMuYW5zd2VyID0gYENvcnJlY3QhIFRoZSBjYXBpdGFsIG9mICR7dGhpcy5yYW5kb21Db3VudHJ5Lm5hbWUuY29tbW9ufSBpcyAke3RoaXMucmFuZG9tQ291bnRyeS5jYXBpdGFsfWAKICAgICAgICB0aGlzLnNjb3JlICs9IDEKICAgICAgfSBlbHNlIGlmKGlzUGFzcykgewogICAgICAgIHRoaXMuYW5zd2VyID0gYFRoZSBjYXBpdGFsIG9mICR7dGhpcy5yYW5kb21Db3VudHJ5Lm5hbWUuY29tbW9ufSBpcyAke3RoaXMucmFuZG9tQ291bnRyeS5jYXBpdGFsfWAKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmFuc3dlciA9IGBOb3BlISBUaGUgY2FwaXRhbCBvZiAke3RoaXMucmFuZG9tQ291bnRyeS5uYW1lLmNvbW1vbn0gaXMgJHt0aGlzLnJhbmRvbUNvdW50cnkuY2FwaXRhbH1gCiAgICAgIH0KICAgICAgdGhpcy5jaGVja2VkQW5zd2VyID0gdHJ1ZQogICAgfQogIH0sCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIHRoaXMubG9hZGVkID0gZmFsc2UKICAgIHRoaXMuZ2FtZUJlZ2FuID0gZmFsc2UKICAgIGF4aW9zLmdldCgnaHR0cHM6Ly9yZXN0Y291bnRyaWVzLmNvbS92My4xL2FsbCcpCiAgICAgIC50aGVuKAogICAgICAgIHJlc3BvbnNlID0+IHsKICAgICAgICAgIHRoaXMuYWxsQ291bnRyaWVzID0gdGhpcy5yZW1vdmVTbWFsbGVyTmF0aW9ucyhyZXNwb25zZS5kYXRhKQogICAgICAgICAgdGhpcy5sb2FkZWQgPSB0cnVlCiAgICAgICAgfSwKICAgICAgICBlcnJvciA9PiBjb25zb2xlLmxvZygoZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UuZGF0YSkgfHwgZXJyb3IubWVzc2FnZSB8fCBlcnJvci50b1N0cmluZygpKQogICAgICApCiAgfQp9Cg=="},{"version":3,"sources":["GameCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GameCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"card-custom\">\n    <h1 class=\"text-center mb-5\">Capital City Game</h1>\n    <div v-if=\"!gameBegan\" class=\"text-center\">\n      <p>Welcome to the capital city game where you are given a country and it's flag and you must guess the capital city. See how many you can get out of 10!</p>\n      <b-button @click=\"beginGame()\">Begin Game</b-button>\n    </div>\n    <div v-if=\"loaded && gameBegan\" class=\"text-center\">\n      <h5>Your Score: {{ score }}</h5>\n      <img :src=\"randomCountry.flags.png\" alt=\"\">\n      <h3 class=\"m-4\">\n        {{ randomCountry.name.common }}\n      </h3>\n      <div class=\"d-flex\" v-if=\"!checkedAnswer\">\n        <b-form-input v-model=\"text\" v-on:keyup.enter=\"checkAnswer(false)\" placeholder=\"Enter the capital city\"></b-form-input>\n        <b-button @click=\"checkAnswer(false)\" class=\"ml-3\" variant=\"success\">Enter</b-button>\n        <b-button @click=\"checkAnswer(true)\" class=\"ml-3\" variant=\"success\">Pass</b-button>\n      </div>\n      <div v-if=\"checkedAnswer\">\n        <h5>\n          {{ answer }}\n        </h5>\n        <b-button v-if=\"numberOfAnswers < 10\" class=\"mt-3\" variant=\"danger\" @click=\"randomiseCountry(tenCountries)\">Next country</b-button>\n      </div>\n    </div>\n    <div v-if=\"numberOfAnswers == 10\" class=\"text-center\">\n      <p>Thanks for playing! You scored {{ score }}/10</p>\n      <b-button variant=\"success\" @click=\"restartGame()\">Play again</b-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'GameCard',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      loaded: false,\n      allCountries: [],\n      randomCountry: null,\n      gameBegan: false,\n      text: null,\n      checkedAnswer: false,\n      answer: null,\n      score: 0,\n      numberOfAnswers: 0,\n      tenCountries: []\n    }\n  },\n  methods: {\n    restartGame() {\n      this.gameBegan = false\n      this.score = 0\n      this.numberOfAnswers = 0,\n      this.checkedAnswer = false\n    },\n    randomiseCountry(tenCountries) {\n      this.text = \"\"\n      this.checkedAnswer = false\n      this.randomCountry = tenCountries[this.numberOfAnswers]\n    },\n    beginGame() {   \n      this.tenCountries = this.allCountries.sort(() => Math.random() - Math.random()).slice(0, 10)\n      console.log(this.tenCountries)\n      this.randomiseCountry(this.tenCountries)\n      this.gameBegan = true\n    },\n    removeSmallerNations(countryData) {\n      let data = []\n\n      countryData.forEach(country => {\n        if(country.population > 1000000) {\n          data.push(country)\n        }\n      })\n\n      return data\n    },\n    checkAnswer(isPass) {\n      this.numberOfAnswers += 1\n      let userAnswer = this.text.toLowerCase().trim().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n      let capitalAnswer = this.randomCountry.capital.toString().toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n      let answer = userAnswer == capitalAnswer ? true : false\n      \n      if (answer) {\n        this.answer = `Correct! The capital of ${this.randomCountry.name.common} is ${this.randomCountry.capital}`\n        this.score += 1\n      } else if(isPass) {\n        this.answer = `The capital of ${this.randomCountry.name.common} is ${this.randomCountry.capital}`\n      } else {\n        this.answer = `Nope! The capital of ${this.randomCountry.name.common} is ${this.randomCountry.capital}`\n      }\n      this.checkedAnswer = true\n    }\n  },\n  async mounted() {\n    this.loaded = false\n    this.gameBegan = false\n    axios.get('https://restcountries.com/v3.1/all')\n      .then(\n        response => {\n          this.allCountries = this.removeSmallerNations(response.data)\n          this.loaded = true\n        },\n        error => console.log((error.response && error.response.data) || error.message || error.toString())\n      )\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n  .card-custom {\n    width: 95%;\n    padding: 20px;\n    background-color: rgb(245, 236, 236);\n    border-radius: 5px;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n    @media screen and (min-width: 568px) {\n      width: 50%; \n    }\n  }\n</style>\n"]}]}