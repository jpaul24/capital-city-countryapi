{"remainingRequest":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/src/components/GameCard.vue?vue&type=style&index=0&id=30933152&scoped=true&lang=scss&","dependencies":[{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/src/components/GameCard.vue","mtime":1641990518808},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/css-loader/dist/cjs.js","mtime":1641833606830},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1641833607837},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/postcss-loader/src/index.js","mtime":1641833607023},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/sass-loader/dist/cjs.js","mtime":1641833634038},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/cache-loader/dist/cjs.js","mtime":1641833606347},{"path":"/Users/joepaul/new_code/portfolio-Oct21/capital-city-countryapi/node_modules/vue-loader/lib/index.js","mtime":1641833607612}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNhcmQgewogIHdpZHRoOiA0MCU7CiAgcGFkZGluZzogMjBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQ1LCAyMzYsIDIzNik7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4zNSkgMHB4IDVweCAxNXB4Owp9Cg=="},{"version":3,"sources":["GameCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GameCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"card\">\n    <h1 class=\"text-center mb-5\">Capital City Game</h1>\n    <div v-if=\"!gameBegan\" class=\"text-center\">\n      <p>Welcome to the capital city game where you are given a country and it's flag and you must guess the capital city. See how many you can get out of 10!</p>\n      <b-button @click=\"beginGame()\">Begin Game</b-button>\n    </div>\n    <div v-if=\"loaded && gameBegan\" class=\"text-center\">\n      <img :src=\"randomCountry.flags.png\" alt=\"\">\n      <h3 class=\"m-4\">\n        {{ randomCountry.name.common }}\n      </h3>\n      <div class=\"d-flex\">\n        <b-form-input v-model=\"text\" placeholder=\"Enter the capital city\"></b-form-input>\n        <b-button @click=\"checkAnswer($event)\" class=\"ml-3\" variant=\"success\">Enter</b-button>\n      </div>\n      <div v-if=\"checkedAnswer\">\n        {{ answer }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'GameCard',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      loaded: false,\n      allCountries: [],\n      randomCountry: null,\n      gameBegan: false,\n      text: null,\n      checkedAnswer: false,\n      answer: null\n    }\n  },\n  methods: {\n    randomiseCountry(allCountries) {\n      this.randomCountry = allCountries[Math.floor(Math.random() * allCountries.length)] \n    },\n    beginGame() {\n      this.gameBegan = true\n    },\n    removeSmallerNations(countryData) {\n      let data = []\n\n      countryData.forEach(country => {\n        if(country.population > 1000000) {\n          data.push(country)\n        }\n      })\n\n      return data\n    },\n    checkAnswer(e) {\n      let capitalAnswer = this.randomCountry.capital.toString().toLowerCase()\n      let answer = this.text.toLowerCase() == capitalAnswer ? true : false\n      \n      if (answer) {\n        this.answer = `Correct! The capital of ${this.randomCountry.name.common} is ${this.randomCountry.capital}`\n      } else {\n        this.answer = `WRONG`\n      }\n      this.checkedAnswer = true\n    }\n  },\n  async mounted() {\n    this.loaded = false\n    this.gameBegan = false\n    axios.get('https://restcountries.com/v3.1/all')\n      .then(\n        response => {\n          this.allCountries = this.removeSmallerNations(response.data)\n          this.randomiseCountry(this.allCountries)\n          this.loaded = true\n        },\n        error => console.log((error.response && error.response.data) || error.message || error.toString())\n      )\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n  .card {\n    width: 40%;\n    padding: 20px;\n    background-color: rgb(245, 236, 236);\n    border-radius: 5px;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  }\n</style>\n"]}]}